-- 데이터베이스 검색 (SELECT ~ FROM~) : 해당 테이블에서 원하는 정보를 검색할 때 사용
--    - 원래 테이블의 내용은 변경 되지 않는다. ( COMMIT를 할 필요가 없다.)
--    - 결과는 테이블형태로 나온다.(JAVA에서는 ResultSet)
--    - 대/소문자를 구별하지는 않는다. (단, 조건은 대소문자를 구별)
--    - 문자, 날짜, 조건은 홑따옴표를 사용한다.

--SELECT [ALL┃DISTINCT] 속성이름(들)
-- FROM 	      테이블이름(들)
-- [WHERE        검색조건(들)]
-- [GROUP BY    속성이름]
-- [HAVING       검색조건(들)]
-- [ORDER BY    속성이름 [ASC┃DESC]]


-- 고객테이블의 모든 정보 검색( 특정 컬럼이 아닌 모든 컬럼을 지정할때는 *를 사용)
   select * FROM 고객테이블 ;
   
-- 고객테이블에서 고객아이디, 고객이름, 등급 속성만 검색
   select 고객아이디, 고객이름, 등급 from 고객테이블;
   
-- 고객테이블에서 등급만 검색 
   select 등급 from 고객테이블;
   
-- 고객테이블에서 등급만 검색 (중복제거)
   select DISTINCT 등급 from 고객테이블;

-- 별칭 : 속성명을 바꾸어 출력 (실제 변경은 안된다.)
--       속성명 as 별칭 또는  속성명 별칭 

-- 제품 테이블에서 제품명과 단가를 검색하되, 단가를 가격이라는 새 이름으로 출력해보자 
  select 제품명, 단가, 단가 as 가격
  from 제품테이블;

-- 속성의 타입이 number, 날짜이면 산술연산이 가능하다.
-- 제품테이블에서 제품명, 단가, 단가+500를 조정가격이라는 컬럼명으로 검색하자.
  select 제품명, 단가, 단가+500 as 조정가격 
  from 제품테이블;
  
  -- 주문테이블에  주문일자와 도착일자(주문일자+5)를 검색하자.
  select 주문일자, 주문일자+5 as 도착일자 
  from 주문테이블;
  
-- [where 조건 ] : 조건을 만족하는 데이터만 검색 (컬러명 연산자 )
 -- 1. 비교연산( = (같다),  <> (다르다 = 같지않다.), >=, <=, >, <)
 -- 2. 논린연산( AND, OR, NOT)
 -- 3. like : 부분적으로 일치하는 데이터 검색 
 --    % : 0개 이상의 문자 (문자의 내용과 개수는 상관없음)
 --    _ : 1개의 문자(내용은 상관없음, 개수는 반드시 1:1 매칭)
 --  4. NULL 검색 :  비교연산자 사용 못함
 --     컬럼명 is null     :  null 인 컬럼 찾기 
 --     컬럼명 is not null :  null 이 아닌 컬럼 찾기 
 
 
-- 고객테이블에서 직업이 학생인 사람의 모든 정보 검색하자 (=)
   select * from 고객테이블 where  직업 = '학생';
   
-- 고객테이블에서 직업이 학생을 제외한 사람의 모든 정보 검색하자.(<>)
   select * from 고객테이블 where  직업 <> '학생';
   select * from 고객테이블 where not 직업 = '학생';
   select * from 고객테이블 where 직업 != '학생';

 -- 고객테이블에서 적립금이 3000이상인 사람의 모든 정보 검색 
    select * from 고객테이블 where 적립금 >= 3000 ;
 -- 고객테이블에서 적립금이 3000미만인 사람의 모든 정보 검색 
    select * from 고객테이블 where 적립금 < 3000 ;
 -- 고객테이블에서 적립금이 1000 ~ 3000인 사람의 모든 정보 검색 (범위는 and 조건)
    select * from 고객테이블 where 적립금 >= 1000 and 적립금 <= 3000 ;
 -- 고객테이블에서 적립금이 1000 ~ 3000인 사람의 모든 정보 검색 (범위는 컬럼명 between A and B )
    select * from 고객테이블 where 적립금 BETWEEN 1000 and 3000 ;
 -- 고객테이블에서 직업이 학생이거나 교사인 사람의 모든 정보 검색 (or)
    select * from 고객테이블 where 직업 = '학생' OR 직업 = '교사';
 -- 고객테이블에서 직업이 학생이거나 교사인 사람의 모든 정보 검색 (OR == IN)
    select * from 고객테이블 where 직업 in ('학생' , '교사');
 -- 고객테이블에서 성이 김씨인(김의 시작하는) 고객의 이름, 나이, 등급, 적립금을 검색하자
    select * from 고객테이블 where 고객이름 like '김%' ;
 -- 제품테이블 에서 제품명 '만두'로 끝나는 제품의 모든 정보 검색
    select * from 제품테이블 where 제품명 like '%만두';
 -- 제품테이블 에서 제조업체 중 '한'을 포함한 제품의 모든 정보 검색 
    select * from 제품테이블 where 제조업체 like '%한%';
 -- 고객테이블에서 고객아이디가 5자인 고객의 고객아이디,고객이름,등급을 검색하자.
    select * from 고객테이블 where 고객아이디 like '_____';
 -- 고객테이블에서 나이가 null 고객 (나이가 입력되지않은 고객)의 모든 정보를 검색하자 
    select * from 고객테이블 where 나이 is null ;
 -- 고객테이블에서 나이가 null 아닌 고객의 모든 정보를 검색하자 
    select * from 고객테이블 where 나이 is not null ;
    
  -- 정렬 : 언제나 맨 마지막 줄에 넣는다.
  --        order by  키워드 이용 , asc 오름차순(생략가능),  desc 내림차순
  --        null 은 오름차순일때 맨 마지막,  내림차순일때 맨위에 출력된다.
  --    형식)  order by 컬럼명 [ASC | DESC ] ;
  
  --  고객테이블에서 고객이름, 등급, 나이를 검색하되, 나이를 기준으로 내림차순 정렬 해보자 
      select 고객이름, 등급, 나이 from 고객테이블 order by 나이 desc ; -- 내림
      select 고객이름, 등급, 나이 from 고객테이블 order by 나이 asc;      -- 오름
      select 고객이름, 등급, 나이 from 고객테이블 order by 나이 ;      -- 오름
      
  --  주문테이블에서 주문고객, 주문제품, 수량, 주문일자를 검색해보자 
  --  (단, 주문제품을 기준으로 오름차순 정렬하고, 동일 제품은  수량을 기준으로 내림차순 하자)
     select 주문고객, 주문제품, 수량, 주문일자 from 주문테이블 order by 주문제품 asc , 수량 desc;
     
     
  
  
  
